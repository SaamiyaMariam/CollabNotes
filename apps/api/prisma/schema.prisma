datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  displayName String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  refreshTokens  RefreshToken[]
  notes          Note[]             @relation("UserNotes")
  folders        Folder[]           @relation("UserFolders")
  collaborations NoteCollaborator[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  tokenHash String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Folder {
  id        String    @id @default(cuid())
  ownerId   String
  owner     User      @relation("UserFolders", fields: [ownerId], references: [id])
  name      String
  color     String?
  sortOrder Int       @default(0)
  deletedAt DateTime?
  url       String    @unique
  parentId  String?
  parent    Folder?   @relation("FolderToFolder", fields: [parentId], references: [id])
  children  Folder[]  @relation("FolderToFolder")

  notes Note[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([ownerId, url])
  @@index([ownerId, deletedAt])
}

model Note {
  id      String @id @default(cuid())
  ownerId String
  owner   User   @relation("UserNotes", fields: [ownerId], references: [id])

  folderId String?
  folder   Folder? @relation(fields: [folderId], references: [id])

  title         String             @default("Untitled")
  contentJson   Json?
  contentText   String?
  color         String?
  sortOrder     Int                @default(0)
  deletedAt     DateTime?
  url           String
  collaborators NoteCollaborator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ydocState YDocState?

  @@unique([ownerId, folderId, url])
  @@index([ownerId, folderId, deletedAt])
}

model NoteCollaborator {
  noteId    String
  userId    String
  role      CollaboratorRole @default(EDITOR)
  addedBy   String
  createdAt DateTime         @default(now())

  note Note @relation(fields: [noteId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([noteId, userId])
  @@index([userId])
}

enum CollaboratorRole {
  EDITOR
  CREATOR
}

model YDocState {
  noteId    String   @id
  note      Note     @relation(fields: [noteId], references: [id])
  state     Bytes
  updatedAt DateTime @updatedAt
}
